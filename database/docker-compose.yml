version: "3.7"
services:
  redis-cache:
    image: redis:7.2
    container_name: concert-ticketing-redis-cache
    ports:
      - "6380:6379"
    networks:
      - concert-ticketing-db
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 10
      interval: 5s
      timeout: 10s
  redis-queue:
    image: redis:7.2
    container_name: concert-ticketing-redis-queue
    ports:
      - "6381:6379"
    networks:
      - concert-ticketing-db
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 10
      interval: 5s
      timeout: 10s
  mysqldb:
    image: mysql:8.0
    container_name: concert-ticketing-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test_db
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_password
    ports:
      - "3306:3306"
    networks:
      - concert-ticketing-db
    command: [ "mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci" ]
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      retries: 10
      interval: 3s
      timeout: 10s
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
      - ./my.cnf:/etc/mysql/my.cnf
  mongodb:
    image: mongo:6.0
    container_name: concert-ticketing-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: test_user
      MONGO_INITDB_ROOT_PASSWORD: test_password
    ports:
      - "27017:27017"
    networks:
      - concert-ticketing-db
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      retries: 10
      interval: 5s
      timeout: 10s
networks:
  concert-ticketing-db:
